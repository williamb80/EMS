@model EMS.Mvc.ViewModels.Registration.ChurchViewModel

@if (Model.Id == 0)
{
    <h1>@Html.Raw(EMS.Resource.Registration.ChurchResource.NewChurch)</h1>
}

@using (Html.BeginForm())
{

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@Html.DisplayFor(model => model.Name)</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstPhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstPhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstPhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SecondPhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SecondPhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SecondPhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Initials, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Initials, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Initials, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>

        @*
            NOVO: APARECER UM INPUT COM AUTO COMPLETE E BOTAO INCLUIR, AO SALVAR, SUMIR E REAPARECER NOVO
            DETALHE:   ABRIR EM NOVA ABA
            estudar hipótese do nome ser um link o nome para abrir detalhe
        *@
        <p>
            <h4>@Html.Raw(EMS.Resource.Registration.RepresentativeResource.Representative)</h4>
        </p>
            @if (Model.Representatives != null)
            {
                <p>
                    <div class="form-group">
                        <div class="col-md-10">
                            @*COLOCAR AUTO COMPLETE AQUI*@
                            @* @Html.EditorFor(model => model.Representatives.FirstOrDefault().Name, new { htmlAttributes = new { @class = "form-control" } })*@
                            @*<input id="RepresentativeName" class="form-control typeahead" placeholder="@Html.Raw(EMS.Resource.Registration.RepresentativeResource.RepresentativeName)" />*@

                            <select class="js-example-basic-single">
                                @foreach (var item in ViewBag.Representatives)
                                {
                                    <option value="item.Id">item.Name</option>
                                }
                            </select>
                            @Html.ActionLink(EMS.Framework.Resource.ButtonsResource.Include, "")
                        </div>
                    </div>
                </p>
            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => Model.Representatives.FirstOrDefault().Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => Model.Representatives.FirstOrDefault().Email)
                    </th>
                    <th>
                    </th>
                </tr>
                @foreach (var representative in Model.Representatives)
                {
                    <tr>
                        <td>
                            <a href="#" id="btnDetail" data-value="@representative.Id" data-loading-text="@Html.Raw(EMS.Framework.Resource.ButtonsResource.Loading)...">@Html.Raw(representative.Name)</a>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => representative.Email)
                        </td>
                        <td>
                            @*<a href="#" id="btnDetail" data-value="@representative.Id" class="btn btn-default btnDetail"@Html.Raw(EMS.Framework.Resource.ButtonsResource.View)</a>*@
                            <a href="#" id="btnEdit" data-value="@representative.Id" class="btn btn-default btnEdit" data-loading-text="@Html.Raw(EMS.Framework.Resource.ButtonsResource.Loading)...">@Html.Raw(EMS.Framework.Resource.ButtonsResource.Edit)</a>
                            <a href="#" id="btnRemove" data-value="@representative.Id" class="btn btn-default btnRemove" data-loading-text="@Html.Raw(EMS.Framework.Resource.ButtonsResource.Loading)...">@Html.Raw(EMS.Framework.Resource.ButtonsResource.Remove)</a>
                        </td>
                    </tr>
                }
            </table>
            }



            <div class="modal-footer">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="@Html.Raw(EMS.Framework.Resource.ButtonsResource.Save)" class="btn btn-primary" />
                    @if (Model.Id != 0)
                {
                        @Html.ActionLink(EMS.Framework.Resource.ButtonsResource.Delete, "Delete", Model, new { @class = "btn btn-default" })
                    }
                    else
                    {
                        @Html.ActionLink(EMS.Framework.Resource.ButtonsResource.BackToList, "", new { @class = "btn btn-default" });
                }
                </div>
            </div>


        </div>

                @section Scripts {
                    @*@Scripts.Render("~/bundles/jquery")
                        @Scripts.Render("~/bundles/jqueryval")
                        @Scripts.Render("~/bundles/maskedinput")
                        @Scripts.Render("~/bundles/select2")*@

                    <script>
                        $(document).ready(function () {

                            $("#FirstPhoneNumber").mask("(99) 9999-9999");
                            $("#SecondPhoneNumber").mask("(99) 9999-9999");
                            $("#BirthDate").mask("99/99/9999");

                            $('.btnDetail').on('click', function () { ConfigureButtonsToOpenModal($(this), "/Church/Detail/") });
                            $('.btnEdit').on('click', function () { ConfigureButtonsToOpenModal($(this), "/Church/Edit/") });

                            $(".js-example-basic-single").select2();
                        })

                    </script>
                }
}
